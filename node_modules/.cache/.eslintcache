[{"/Users/a0000/Desktop/crypto/cryptocurrency-price-tracker/src/index.js":"1","/Users/a0000/Desktop/crypto/cryptocurrency-price-tracker/src/App.js":"2","/Users/a0000/Desktop/crypto/cryptocurrency-price-tracker/src/component/Nav.js":"3","/Users/a0000/Desktop/crypto/cryptocurrency-price-tracker/src/component/CoinDetails.js":"4","/Users/a0000/Desktop/crypto/cryptocurrency-price-tracker/src/component/Coin.js":"5","/Users/a0000/Desktop/crypto/cryptocurrency-price-tracker/src/component/Detail.js":"6","/Users/a0000/Desktop/crypto/cryptocurrency-price-tracker/src/component/CoinItem.js":"7","/Users/a0000/Desktop/crypto/cryptocurrency-price-tracker/src/component/ChartComp.js":"8","/Users/a0000/Desktop/crypto/cryptocurrency-price-tracker/src/component/source.js":"9"},{"size":168,"mtime":1694601402007,"results":"10","hashOfConfig":"11"},{"size":1992,"mtime":1695033339775,"results":"12","hashOfConfig":"11"},{"size":1727,"mtime":1695068655072,"results":"13","hashOfConfig":"11"},{"size":581,"mtime":1695033333005,"results":"14","hashOfConfig":"11"},{"size":532,"mtime":1694692402098,"results":"15","hashOfConfig":"11"},{"size":2923,"mtime":1695029705521,"results":"16","hashOfConfig":"11"},{"size":963,"mtime":1695033322218,"results":"17","hashOfConfig":"11"},{"size":3477,"mtime":1695042470243,"results":"18","hashOfConfig":"11"},{"size":1682,"mtime":1695035664742,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tu4k1m",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/a0000/Desktop/crypto/cryptocurrency-price-tracker/src/index.js",[],[],"/Users/a0000/Desktop/crypto/cryptocurrency-price-tracker/src/App.js",[],[],"/Users/a0000/Desktop/crypto/cryptocurrency-price-tracker/src/component/Nav.js",["50","51"],[],"import AliceCarousel from \"react-alice-carousel\";\nimport \"./nav.css\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Typewriter } from \"react-simple-typewriter\";\n\nfunction Nav({ handleSearch, showSearchBox }) {\n  const [soleil, setSoleil] = useState([]);\n  const url =\n    \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=false&locale=en\";\n\n  const fetchCoin = async () => {\n    const { data } = await axios.get(url);\n    setSoleil(data);\n  };\n\n  useEffect(() => {\n    fetchCoin();\n  }, []);\n\n  const carouselItem = soleil.map((coin) => {\n    return <img src={coin.image} alt={coin.id} />;\n  });\n\n  // console.log(soleil);\n  return (\n    <nav>\n      {showSearchBox && (\n        <input\n          placeholder=\"search your fav coin\"\n          onChange={(e) => handleSearch(e)} // Pass a reference to the function\n        />\n      )}\n      <h1>\n        <Typewriter\n          delaySpeed={1000}\n          words={[\"Coin\", \"Search\", \"Coin Search\"]}\n          loop\n          cursor={{ show: true, blink: true, element: \"]\" }}\n          eraseSpeed={50}\n          style={{ fontFamily: \"Arial\", fontSize: \"24px\", color: \"blue\" }}\n          delayBetweenWords={1500}\n        />\n      </h1>\n      {/* <div>\n        <AliceCarousel\n          items={carouselItem}\n          disableButtonsControls\n          disableDotsControls\n          autoPlay\n          autoPlayInterval={2000}\n          infinite\n          className=\"alice\"\n          responsive={{\n            0: {\n              items: 2,\n            },\n            720: {\n              items: 4,\n            },\n          }}\n        />\n      </div> */}\n    </nav>\n  );\n}\n\nexport default Nav;\n","/Users/a0000/Desktop/crypto/cryptocurrency-price-tracker/src/component/CoinDetails.js",[],[],"/Users/a0000/Desktop/crypto/cryptocurrency-price-tracker/src/component/Coin.js",[],[],"/Users/a0000/Desktop/crypto/cryptocurrency-price-tracker/src/component/Detail.js",["52"],[],"import React from \"react\";\nimport ChartComp from \"./ChartComp\";\n\nfunction Detail({ coin, selectedId }) {\n  const {\n    symbol,\n    market_cap_rank,\n    image,\n    current_price,\n    low_24h,\n    high_24h,\n    market_cap,\n    circulating_supply,\n    name,\n    id,\n    last_updated,\n    price_change_24h,\n    price_change_percentage_24h,\n    ath,\n    ath_change_percentage,\n    ath_date,\n    atl,\n    atl_change_percentage,\n    atl_date,\n  } = coin;\n\n  return (\n    <div className=\"coin-details\">\n      <h1>{name}</h1>\n      <div className=\"coin-price-conatiner\">\n        <div className=\"ranks\">Ranks #{market_cap_rank}</div>\n        <div className=\"soleil\">\n          <div className=\"details\">\n            <img src={image} alt=\"image\" />\n            <p>{symbol}</p>\n            <p>({name}/usd)</p>\n          </div>\n          <div className=\"coin-price\">\n            <h2>${current_price}</h2>\n          </div>\n        </div>\n      </div>\n      <div className=\"ss\">\n        <ChartComp selectedId={selectedId} />\n      </div>\n      <div className=\"makert\">\n        <div className=\"ath\">\n          <div className=\"dd\">\n            <p>24 Hours Low</p>\n            <p className=\"pp\">${low_24h}</p>\n          </div>\n          <div className=\"dd\">\n            <p>24 Hours High</p>\n            <p className=\"pp\">${high_24h}</p>\n          </div>\n        </div>\n        <div className=\"makert-cap\">\n          <div className=\"dd\">\n            <p>Market Cap</p>\n            <p>${market_cap}</p>\n          </div>\n          <div className=\"dd\">\n            <p>Circulating Supply</p>\n            <p className=\"pp\">${circulating_supply}</p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"about\">\n        <h2>about</h2>\n        <p>\n          {name} ({id}) is a cryptocurrency ranked {market_cap_rank} in market\n          capitalization. As of {last_updated}, it is priced at approximately{\" \"}\n          {current_price} USD. In the last 24 hours, it changed by{\" \"}\n          {price_change_24h} USD, representing a {price_change_percentage_24h}%\n          change.\n        </p>\n\n        <p style={{ marginTop: \"20px\" }}>\n          {name}'s all-time high (ATH) was {ath} USD on {ath_date}, with a{\" \"}\n          {ath_change_percentage}% decrease since then. Its all-time low (ATL)\n          was {atl} USD on {atl_date}, with a remarkable {atl_change_percentage}\n          % increase from ATL.\n        </p>\n\n        <p style={{ marginTop: \"20px\" }}>\n          The circulating supply is approximately {circulating_supply} ETH, and\n          there is no maximum supply. The current market cap stands at{\" \"}\n          {market_cap} USD. In the past 24 hours, it ranged from a high of{\" \"}\n          {high_24h} USD to a low of {low_24h} USD. Remember, cryptocurrency\n          prices are highly volatile, so consider your investment goals\n          carefully.\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Detail;\n","/Users/a0000/Desktop/crypto/cryptocurrency-price-tracker/src/component/CoinItem.js",[],[],"/Users/a0000/Desktop/crypto/cryptocurrency-price-tracker/src/component/ChartComp.js",["53","54","55","56","57","58","59"],[],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Bar, Doughnut, Line } from \"react-chartjs-2\";\nimport { candlestickData } from \"./source\";\nimport { Chart as ChartJs } from \"chart.js/auto\";\nimport { CircularProgress, LinearProgress } from \"@mui/material\";\n\nconst Chart = ({ selectedId }) => {\n  const [chartData, setChartData] = useState([]);\n  const [days, setDays] = useState(1);\n  const [loading, setLoading] = useState(false);\n\n  const url = `https://api.coingecko.com/api/v3/coins/${selectedId}/market_chart?vs_currency=usd&days=${days}`;\n\n  const fetchChart = async () => {\n    setLoading(true);\n    try {\n      const { data } = await axios.get(url);\n      console.log(\"this si data:\", data);\n      setChartData(data.prices);\n    } catch (error) {\n      // Handle the error here\n      console.error(\"Error fetching data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const daysData = [\n    {\n      value: 1,\n      text: \"1 Hour\",\n    },\n    {\n      value: 24,\n      text: \"1 Day\",\n    },\n    {\n      value: 168,\n      text: \"7 Days\",\n    },\n    {\n      value: 720,\n      text: \"1 Month\",\n    },\n  ];\n\n  // console.log(\"selectedId:\", selectedId);\n  console.log(\"this is real prices array \", chartData);\n\n  useEffect(() => {\n    fetchChart();\n  }, [days, selectedId]);\n\n  const kazungu = chartData?.map((coin) => {\n    let date = new Date(coin[0]);\n    let time =\n      date.getHours() > 12\n        ? `${date.getHours() - 12}:${date.getMinutes()} PM`\n        : `${date.getHours()}:${date.getMinutes()} AM`;\n\n    return days === 1 ? time : date;\n  });\n\n  console.log(\"here is kaxung dat:\", kazungu);\n\n  return (\n    <div>\n      <div\n        style={{\n          margin: \"20px\",\n          width: \"100%ß\",\n        }}\n      >\n        {chartData ? (\n          <Line\n            data={{\n              labels: chartData.map((coin) => {\n                let date = new Date(coin[0]);\n                let time =\n                  date.getHours() > 12\n                    ? `${date.getHours() - 12}:${date.getMinutes()} PM`\n                    : `${date.getHours()}:${date.getMinutes()} AM`;\n\n                return days === 1 ? time : date.toLocaleDateString();\n              }),\n              datasets: [\n                {\n                  label: \"Price\",\n                  data: chartData.map((coin) => coin[1]),\n                  borderColor: \"blue\",\n                  borderWidth: 2,\n                  fill: false,\n                },\n              ],\n            }}\n            options={{\n              elements: {\n                point: {\n                  radius: 1,\n                },\n              },\n            }}\n          />\n        ) : (\n          <p>\n            <CircularProgress />\n          </p>\n        )}\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-around\",\n        }}\n      >\n        {daysData.map((day) => (\n          <button\n            key={day.value}\n            onClick={() => setDays(day.value)}\n            style={{\n              backgroundColor: days === day.value ? \"blue\" : \"transparent\",\n              color: days === day.value ? \"white\" : \"black\",\n              border: \"none\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              boxShadow: \"1px 1px 4px rgba(0,0,0,0.3)\",\n            }}\n          >\n            {day.text}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Chart;\n","/Users/a0000/Desktop/crypto/cryptocurrency-price-tracker/src/component/source.js",[],[],{"ruleId":"60","severity":1,"message":"61","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":21},{"ruleId":"60","severity":1,"message":"64","line":21,"column":9,"nodeType":"62","messageId":"63","endLine":21,"endColumn":21},{"ruleId":"65","severity":1,"message":"66","line":34,"column":13,"nodeType":"67","endLine":34,"endColumn":44},{"ruleId":"60","severity":1,"message":"68","line":3,"column":10,"nodeType":"62","messageId":"63","endLine":3,"endColumn":13},{"ruleId":"60","severity":1,"message":"69","line":3,"column":15,"nodeType":"62","messageId":"63","endLine":3,"endColumn":23},{"ruleId":"60","severity":1,"message":"70","line":4,"column":10,"nodeType":"62","messageId":"63","endLine":4,"endColumn":25},{"ruleId":"60","severity":1,"message":"71","line":5,"column":19,"nodeType":"62","messageId":"63","endLine":5,"endColumn":26},{"ruleId":"60","severity":1,"message":"72","line":6,"column":28,"nodeType":"62","messageId":"63","endLine":6,"endColumn":42},{"ruleId":"60","severity":1,"message":"73","line":11,"column":10,"nodeType":"62","messageId":"63","endLine":11,"endColumn":17},{"ruleId":"74","severity":1,"message":"75","line":53,"column":6,"nodeType":"76","endLine":53,"endColumn":24,"suggestions":"77"},"no-unused-vars","'AliceCarousel' is defined but never used.","Identifier","unusedVar","'carouselItem' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Bar' is defined but never used.","'Doughnut' is defined but never used.","'candlestickData' is defined but never used.","'ChartJs' is defined but never used.","'LinearProgress' is defined but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchChart'. Either include it or remove the dependency array.","ArrayExpression",["78"],{"desc":"79","fix":"80"},"Update the dependencies array to be: [days, fetchChart, selectedId]",{"range":"81","text":"82"},[1309,1327],"[days, fetchChart, selectedId]"]