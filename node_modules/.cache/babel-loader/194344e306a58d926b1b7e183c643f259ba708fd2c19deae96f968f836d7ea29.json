{"ast":null,"code":"var _jsxFileName = \"/Users/a0000/Desktop/crypto/cryptocurrency-price-tracker/src/component/ChartComp.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chart = ({\n  selectedId\n}) => {\n  _s();\n  const [chartData, setChartData] = useState([]);\n  const [days, setDays] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const url = `https://api.coingecko.com/api/v3/coins/${selectedId}/market_chart?vs_currency=usd&days=${days}`;\n  const fetchChart = async () => {\n    setLoading(true);\n    try {\n      const {\n        data\n      } = await axios.get(url);\n      setChartData(data);\n    } catch (error) {\n      // Handle the error here\n      console.error(\"Error fetching data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const daysData = [{\n    value: 1,\n    text: \"1 Hour\"\n  }, {\n    value: 1,\n    text: \"1 Day\"\n  }, {\n    value: 7,\n    text: \"7 Days\"\n  }, {\n    value: 30,\n    text: \"1 Month\"\n  }];\n  useEffect(() => {\n    fetchChart();\n  }, [days, selectedId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: chartData.prices.map(item => new Date(item[0]).toLocaleTimeString()),\n          // Format labels as time\n          datasets: [{\n            label: \"Price\",\n            data: chartData.prices.map(point => ({\n              x: new Date(point[0]).toLocaleTimeString(),\n              y: point[1]\n            })),\n            borderColor: \"blue\",\n            borderWidth: 2,\n            fill: false\n          }]\n        },\n        options: {\n          scales: {\n            x: {\n              type: \"time\",\n              time: {\n                unit: \"hour\" // Adjust based on your data\n              }\n            },\n\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-around\"\n      },\n      children: daysData.map(day => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDays(day.value),\n        style: {\n          backgroundColor: days === day.value ? \"blue\" : \"transparent\",\n          color: days === day.value ? \"white\" : \"black\"\n        },\n        children: day.text\n      }, day.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Chart, \"rUCnij3rKQvzeazHhGTvQ8bpqNE=\");\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["axios","React","useEffect","useState","Line","jsxDEV","_jsxDEV","Chart","selectedId","_s","chartData","setChartData","days","setDays","loading","setLoading","url","fetchChart","data","get","error","console","daysData","value","text","children","fileName","_jsxFileName","lineNumber","columnNumber","labels","prices","map","item","Date","toLocaleTimeString","datasets","label","point","x","y","borderColor","borderWidth","fill","options","scales","type","time","unit","beginAtZero","style","display","justifyContent","day","onClick","backgroundColor","color","_c","$RefreshReg$"],"sources":["/Users/a0000/Desktop/crypto/cryptocurrency-price-tracker/src/component/ChartComp.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst Chart = ({ selectedId }) => {\n  const [chartData, setChartData] = useState([]);\n  const [days, setDays] = useState(1);\n  const [loading, setLoading] = useState(false);\n\n  const url = `https://api.coingecko.com/api/v3/coins/${selectedId}/market_chart?vs_currency=usd&days=${days}`;\n\n  const fetchChart = async () => {\n    setLoading(true);\n    try {\n      const { data } = await axios.get(url);\n      setChartData(data);\n    } catch (error) {\n      // Handle the error here\n      console.error(\"Error fetching data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const daysData = [\n    {\n      value: 1,\n      text: \"1 Hour\",\n    },\n    {\n      value: 1,\n      text: \"1 Day\",\n    },\n    {\n      value: 7,\n      text: \"7 Days\",\n    },\n    {\n      value: 30,\n      text: \"1 Month\",\n    },\n  ];\n\n  useEffect(() => {\n    fetchChart();\n  }, [days, selectedId]);\n\n  return (\n    <div>\n      <div>\n        {loading ? (\n          <p>Loading...</p>\n        ) : (\n          <Line\n            data={{\n              labels: chartData.prices.map((item) =>\n                new Date(item[0]).toLocaleTimeString()\n              ), // Format labels as time\n              datasets: [\n                {\n                  label: \"Price\",\n                  data: chartData.prices.map((point) => ({\n                    x: new Date(point[0]).toLocaleTimeString(),\n                    y: point[1],\n                  })),\n                  borderColor: \"blue\",\n                  borderWidth: 2,\n                  fill: false,\n                },\n              ],\n            }}\n            options={{\n              scales: {\n                x: {\n                  type: \"time\",\n                  time: {\n                    unit: \"hour\", // Adjust based on your data\n                  },\n                },\n                y: {\n                  beginAtZero: true,\n                },\n              },\n            }}\n          />\n        )}\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-around\",\n        }}\n      >\n        {daysData.map((day) => (\n          <button\n            key={day.value}\n            onClick={() => setDays(day.value)}\n            style={{\n              backgroundColor: days === day.value ? \"blue\" : \"transparent\",\n              color: days === day.value ? \"white\" : \"black\",\n            }}\n          >\n            {day.text}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Chart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}